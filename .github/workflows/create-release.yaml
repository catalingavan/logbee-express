name: Create release
on:
  workflow_dispatch:
permissions:
  contents: write
jobs:
  publish_npm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build the module
        run: |
          npm run build

      - name: Publish to npm
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN_LOGBEE_WORKFLOW }}
        run: |
          npm publish --access public

  publish_github:
    runs-on: ubuntu-latest
    needs: [publish_npm]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update the scope
        run: |
          package_file="package.json"
          tmp=$(mktemp)

          jq '.name = "@catalingavan/logbee-express"' "$package_file" > "$tmp" && mv "$tmp" "$package_file"
          cat "$package_file"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build the module
        run: |
          npm run build

      - name: Publish to GitHub Packages
        env:
          NPM_TOKEN: ${{ secrets.GH_PAT_LOGBEE_RELEASE }}
          NODE_AUTH_TOKEN: ${{ secrets.GH_PAT_LOGBEE_RELEASE }}
        run: npm publish --registry=https://npm.pkg.github.com/ --access public

    create_release:
      runs-on: ubuntu-latest
      needs: [publish_npm,publish_github]
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Get version from package.json
          id: version
          run: |
            version=$(cat package.json | jq -r '.version')
            echo "VERSION=$version" >> $GITHUB_OUTPUT
            echo $version

        - name: Build the module
          run: |
            npm run build
        
        - name: Create package file
          run: npm pack

        - name: Release
          uses: softprops/action-gh-release@v2.0.4
          with:
            body: v${{ steps.version.outputs.VERSION }}
            draft: false
            tag_name: v${{ steps.version.outputs.VERSION }}
            files: |
              ./*.tgz
